//package tn.com.st2i.prj.admin.dao.impl;
//
//import java.io.BufferedReader;
//import java.io.File;
//import java.io.FileReader;
//import java.io.FileWriter;
//import java.io.IOException;
//import java.lang.reflect.Field;
//import java.nio.charset.Charset;
//import java.nio.charset.StandardCharsets;
//import java.nio.file.Files;
//import java.nio.file.Path;
//import java.nio.file.Paths;
//import java.util.ArrayList;
//import java.util.Iterator;
//import java.util.List;
//import java.util.Set;
//
//import javax.xml.parsers.DocumentBuilder;
//import javax.xml.parsers.DocumentBuilderFactory;
//import javax.xml.transform.Transformer;
//import javax.xml.transform.TransformerFactory;
//import javax.xml.transform.dom.DOMSource;
//import javax.xml.transform.stream.StreamResult;
//
//import org.hibernate.SessionFactory;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Repository;
//import org.w3c.dom.Document;
//import org.w3c.dom.Element;
//
//import tn.com.st2i.prj.admin.dao.IAdmEntityDao;
//import tn.com.st2i.prj.admin.model.AdmEntity;
//
//import com.easyfaces.dao.model.TableGen;
//import com.easyfaces.dao.model.TableGen;
//import com.easyfaces.dao.tools.ManagerDao;
//
//@Repository("admEntityDao")
//public class AdmEntityDao extends ManagerDao<AdmEntity, Long> implements
//		IAdmEntityDao {
//	@Autowired
//	private SessionFactory sessionFactory;
//
//	@Override
//	public List<String> getListEntities() {
//		List<String> list = new ArrayList<String>();
//		Set<?> listEntities = sessionFactory.getAllClassMetadata().keySet();
//		Iterator<?> iterateur = listEntities.iterator();
//		while (iterateur.hasNext()) {
//			Object key = iterateur.next();
//			System.out.println("\n");
//
//			String text = key.toString();
//			System.err.println(text.substring(text.lastIndexOf(".") + 1,
//					text.length()));
//
//			list.add(text);
//
//		}
//		list.remove("com.easyfaces.dao.model.TableGen");
//		list.remove("com.easyfaces.dao.model.PersistentLogins");
//		list.remove("tn.com.st2i.testPa.admin.model.AdmEntity");
//		list.remove("com.easyfaces.dao.model.MenuItemGen");
//		return list;
//	}
//
//	public List<TableGen> getListVEntity() throws Exception {
//
//		List<String> listt = getListEntities();
//		List<TableGen> list = new ArrayList<TableGen>();
//		for (int i = 0; i < listt.size(); i++) {
//			TableGen t = new TableGen();
//			String nom = listt.get(i);
//			t.setId(nom);
//			t.setCol1(nom);
//			list.add(t);
//		}
//
//		return list;
//	}
//
//	public List<String> getListAttribute(String entityName) throws Exception {
//		List<String> list = new ArrayList<String>();
//
//		for (int j = 0; j < sessionFactory.getClassMetadata(entityName)
//				.getPropertyNames().length; j++) {
//			list.add(sessionFactory.getClassMetadata(entityName)
//					.getPropertyNames()[j]);
//		}
//
//		return list;
//	}
//
//	@Override
//	public List<TableGen> getListVRow(String entityName) throws Exception {
//
//		List<String> listt = getListAttribute(entityName);
//		List<TableGen> list = new ArrayList<TableGen>();
//		for (int i = 0; i < listt.size(); i++) {
//			TableGen t = new TableGen();
//			String nom = listt.get(i);
//			t.setId(nom);
//			t.setCol1(nom);
//			list.add(t);
//		}
//
//		return list;
//	}
//
//	@Override
//	public void GenerateUi(String filename,String className, String packatestPaame)
//			throws Exception {
////		JCodeModel cm = new JCodeModel();
////		JDefinedClass dc = cm._class(packagename + "." + filename + "UI");
////		dc.javadoc()
////				.add("/* Generated By Ahmed Habachi \n \n ahmed.habachi@esprit.tn */");
////		dc.annotate(cm.ref(SuppressWarnings.class)).param("value", "serial");
////		String output  = Character.toLowerCase(filename.substring(filename.lastIndexOf(".") + 1,
////				filename.length()).charAt(0)) +
////                (filename.substring(filename.lastIndexOf(".") + 1,
////        				filename.length()).length() > 1 ? filename.substring(filename.lastIndexOf(".") + 1,
////        						filename.length()).substring(1) : "");
////		
////		dc.annotate(cm.ref(Controller.class)).param("value",
////				output + "UI");
////		dc.annotate(cm.ref(Scope.class)).param("value", "session")
////				.param("proxyMode", ScopedProxyMode.TARGET_CLASS);
////		JMethod construct = dc.constructor(JMod.PUBLIC);
////		construct.body().directStatement(
////				" super(\"uiViewAdmin:" + "list" + filename + "s\");");
////		construct._throws(Exception.class);
////		dc._extends(UiAbstracttestPa.class);
////		Class<?> t = Class.forName("tn.com.st2i.testPa.admin.dao.I"+filename.substring(filename.lastIndexOf(".") + 1,
////				filename.length())+"Dao");
////		
////		
////		JFieldVar jf = dc.field(JMod.PRIVATE,t,  output+"Service");
////		jf.annotate(Autowired.class);
////		 dc.direct("private final static String NAVIGATION_NAME = \"/pages/back/"
////							+filename+"/"+filename+"List.xhtml \" ;");
////		//jf.annotate(Qualifier.class).param("value", "test");
////
////		JMethod m = dc.method(JMod.PROTECTED, String.class, "addRow");
////		m._throws(Exception.class);
////		m.body()._return(JExpr._null());
////
////		JMethod dr = dc.method(JMod.PROTECTED, Void.TYPE, "deleteRow");
////		m._throws(Exception.class);
////		dr.annotate(Override.class);
////		JMethod er = dc.method(JMod.PROTECTED, String.class, "editRow");
////		er._throws(Exception.class);
////		er.annotate(Override.class);
////		er.body()._return(JExpr._null());
////		JMethod i = dc.method(JMod.PROTECTED, Void.TYPE, "init");
////		m._throws(Exception.class);
////		i.body().directStatement("addData("+output+"Service.getList" + filename +" ());");
////		i.annotate(Override.class);
////		i._throws(Exception.class);
////
////		JMethod is = dc.method(JMod.PROTECTED, Void.TYPE, "initSearch");
////		m._throws(Exception.class);
////		is.annotate(Override.class);
////
////		JMethod pcm = dc.method(JMod.PROTECTED, Void.TYPE,
////				"postConstructMethod");
////		m._throws(Exception.class);
////		pcm.annotate(Override.class);
////		pcm.body().directStatement("this.setNavigationName(NAVIGATION_NAME);");
////		File file = new File(
////				"C:/Users/Ahmed Ha/Documents/workspace/testPaeration/testPaeration-presentation/src/main/java");
////		file.mkdirs();
////		if (file.mkdirs()) {
////			System.err.println("!!ok!!");
////		}
////		cm.build(file);
////		if (file.createNewFile()) {
////			System.err.println("Created");
////		}
////		System.err.println("DONE 1!!!");
//
//	}
//
//	@Override
//	public void GenerateXhtml(String fileName) throws Exception {
//		String bloc1 = "list" + fileName + "s";
//		String bloc2 = "formSession.isReadOnly";
//		String bloc3 = "list" + fileName + "s";
//		
//		String output  = Character.toLowerCase(fileName.substring(fileName.lastIndexOf(".") + 1,
//				fileName.length()).charAt(0)) +
//                (fileName.substring(fileName.lastIndexOf(".") + 1,
//        				fileName.length()).length() > 1 ? fileName.substring(fileName.lastIndexOf(".") + 1,
//        						fileName.length()).substring(1) : "");
//		String bloc4 = output + "UI.panelGrid";
//
//		Path path = Paths.get("C:/Users/Ahmed Ha/Desktop/tempateListe.xhtml");
//		boolean success = new File(
//				"C:/Users/Ahmed Ha/Documents/workspace/Generation/Generation-web/src/main/webapp/pages/back/"
//						+ fileName).mkdirs();
//		if (success) {
//
//			Path path1 = Paths
//					.get("C:/Users/Ahmed Ha/Documents/workspace/Generation/Generation-web/src/main/webapp/pages/back/"
//							+ fileName + "/" + fileName + "List.xhtml");
//
//			Charset charset = StandardCharsets.UTF_8;
//
//			String content = new String(Files.readAllBytes(path), charset);
//
//			content = content.replaceAll("bloc1", bloc1);
//			content = content.replaceAll("bloc2", bloc2);
//			content = content.replaceAll("bloc3", bloc3);
//			content = content.replaceAll("bloc4", bloc4);
//			Files.write(path1, content.getBytes(charset));
//			System.err.println("DONE 2");
//		}
//
//	}
//
//	@Override
//	public void GenerateXml(String fileName, String[] rows) throws Exception {
//
//		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory
//				.newInstance();
//		DocumentBuilder documentBuilder = documentBuilderFactory
//				.newDocumentBuilder();
//		Document document = documentBuilder
//				.parse("C:\\Users\\Ahmed Ha\\Documents\\workspace\testPaeration\testPaeration-web\\src\\main\\resources\\uiView\\xml\\uiViewAdmin.xml");
//		Element root = document.getDocumentElement();
//
//		Element uiView = document.createElement("uiView");
//		uiView.setAttribute("id", "list" + fileName + "s");
//		Element title = document.createElement("title");
//		title.appendChild(document
//				.createTextNode("adminProfil.datatable.title"));
//		uiView.appendChild(title);
//		Element exportFileName = document.createElement("exportFileName");
//		exportFileName.appendChild(document.createTextNode("list" + fileName
//				+ "s"));
//		uiView.appendChild(exportFileName);
//		for (int i = 0; i < rows.length; i++) {
//
//			/*
//			 * 
//			 * Resource bundle
//			 */
//
//			String content = "\n" + fileName + ".datatable.column." + rows[i]
//					+ "=" + rows[i];
//
//			File file = new File(
//					"C:\\Users\\Ahmed Ha\\Documents\\workspace\testPaeration\testPaeration-web\\src\\main\\resources\\resourceBundle\\messageResourceComponent.properties");
//
//			if (file.exists()) {
//				FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
//				fw.write(content);
//				fw.close();
//
//				System.err.println("Done");
//			}
//
//			/*
//			 * end
//			 */
//			Element uiViewHeader = document.createElement("uiViewHeader");
//			uiViewHeader.setAttribute("colTitle", fileName
//					+ ".datatable.column." + rows[i]);
//			uiViewHeader.setAttribute("colWidth", "30");
//			uiViewHeader.setAttribute("dual", "true");
//			uiView.appendChild(uiViewHeader);
//		}
//		root.appendChild(uiView);
//
//		DOMSource source = new DOMSource(document);
//
//		TransformerFactory transformerFactory = TransformerFactory
//				.newInstance();
//		Transformer transformer = transformerFactory.newTransformer();
//		StreamResult result = new StreamResult(
//				"C:\\Users\\Ahmed Ha\\Documents\\workspace\testPaeration\testPaeration-web\\src\\main\\resources\\uiView\\xml\\uiViewAdmin.xml");
//		transformer.transform(source, result);
//
//		System.err.println("DONE 3");
//
//	}
//
//	@Override
//	public List<String> findPackaGenames() {
//		List<String> result = new ArrayList<>();
//		for (Package p : Package.getPackages()) {
//			if (p.getName().startsWith("tn")) {
//				result.add(p.getName());
//			}
//		}
//
//		System.out.println("\n" + result.toString() + "\n");
//		return result;
//	}
//
//	@Override
//	public void GenerateDao(String fileName, String[] rows, String className)
//			throws Exception {
//
//		String[] fields = getFiled(className);
//		String main = "/**\n" + "*testPaerated By Ahmed Habachi\n"
//				+ "*ahmed.habachi@esprit.tn *<!---->\n" + "*\n" + "*/\n";
//		String head = "public List<TabletestPa> getList" + fileName + " ()"
//				+ " throws Exception ;\n";
//		main += "\n @Override\n" + "public List<TabletestPa> getList" + fileName
//				+ " ()" + " throws Exception {\n"
//
//				+ " \nRequest requete = new Request(" + fileName + ".class,"
//				+ fileName + "." + fields[0] + "); \n";
//		
//
//		for (int i = 0; i < fields.length; i++) {
//			main += "\n requete.addField(" + fileName + "." + fields[i]
//					+ "); \n";
//		}
//
//		main += "\n return getList(requete); \n";
//		main += "\n } \n";
//		String path = "C:\\Users\\Ahmed Ha\\Documents\\workspace\testPaeration\testPaeration-persistence\\src\\main\\java\\tn\\com\\st2i\testPa\\admin\\dao\\impl\\"
//				+ fileName + "Dao.java";
//		String path1 = "C:\\Users\\Ahmed Ha\\Documents\\workspace\testPaeration\testPaeration-persistence\\src\\main\\java\\tn\\com\\st2i\testPa\\admin\\dao\\I"
//				+ fileName + "Dao.java";
//		
//		javaSourceWriter(head, path1);
//		javaSourceWriter(main, path);
//
//	}
//
//	public void javaSourceWriter(String str, String path) {
//		StringBuilder st = new StringBuilder();
//		try {
//			FileReader reader = new FileReader(path);
//			BufferedReader bufferedReader = new BufferedReader(reader);
//
//			String line;
//
//			while ((line = bufferedReader.readLine()) != null) {
//				st.append(line);
//				st.append("\n");
//			}
//			System.out.println(st.lastIndexOf("}") - 1);
//			System.out.println(st.length());
//			st.insert(st.lastIndexOf("}") - 1, str);
//			File file = new File(path);
//			FileWriter fw = new FileWriter(file.getAbsoluteFile());
//			fw.write(String.valueOf(st));
//			fw.close();
//			reader.close();
//			System.out.println("Done Writer");
//
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//
//	}
//	
//	
//
//	public String[] getFiled(String fileName) throws ClassNotFoundException {
//		List<String> list = new ArrayList<String>();
//		Class<?> t = Class.forName(fileName);
//		for (Field f : t.getFields()) {
//			try {
//				list.add(f.getName());
//			} catch (IllegalArgumentException e) {
//				// TODO Auto-testPaerated catch block
//				e.printStackTrace();
//			}
//		}
//		list.remove("_nameTable");
//		list.remove("listType");
//		String[] a = new String[list.size()];
//		return list.toArray(a);
//
//	}
//}