package tn.com.st2i.prj.admin.dao.impl;

/**
 * Generated by easyfaces Hibernate Tools 4.3.1
 */


import java.util.Date;
import java.util.List;

import tn.com.st2i.prj.admin.dao.IVAdmLogDataDao;
import tn.com.st2i.prj.admin.model.AdmUtilisateur;
import tn.com.st2i.prj.admin.model.VAdmLogData;

import com.easyfaces.dao.model.TableGen;
import com.easyfaces.dao.request.ClauseParameterExists;
import com.easyfaces.dao.request.EnumTypOp;
import com.easyfaces.dao.request.EnumTypOrdre;
import com.easyfaces.dao.request.Request;
import com.easyfaces.dao.tools.ManagerDao;

import org.springframework.stereotype.Repository;

@Repository("vAdmLogDataDao")
public class VAdmLogDataDao extends ManagerDao<VAdmLogData, Long> implements
		IVAdmLogDataDao {
	
	public List<TableGen> getListLogData(String login, String nom,
			Date dateDebut, Date dateFin, String adr, String typeOp,
			String table) throws Exception {

		Request requete = new Request(VAdmLogData.class, VAdmLogData._idLog);

		requete.addField(VAdmLogData._login);
		requete.addField(VAdmLogData._nom);
		requete.addField(VAdmLogData._datLog);
		requete.addField(VAdmLogData._timeLog);
		requete.addField(VAdmLogData._remoteAddr);
		requete.addField(VAdmLogData._typOpFr);
		requete.addField(VAdmLogData._typOpAr);
		requete.addField(VAdmLogData._tableName);

		requete.setMaxRow(500);

		ClauseParameterExists existLogin = new ClauseParameterExists();
		existLogin.setJoinClass(AdmUtilisateur.class);
		existLogin.setJoinColumn(VAdmLogData._idUser, AdmUtilisateur._idUser);
		existLogin.setNegation(false);
		existLogin
				.setOperationString(EnumTypOp.StringParameter.CENTER_WORD_LIKE);
		existLogin.setParameterClause(AdmUtilisateur._login, login);
		requete.addClause(existLogin);

		ClauseParameterExists existNom = new ClauseParameterExists();
		existNom.setJoinClass(AdmUtilisateur.class);
		existNom.setJoinColumn(VAdmLogData._idUser, AdmUtilisateur._idUser);
		existNom.setNegation(false);
		existNom.setOperationString(EnumTypOp.StringParameter.CENTER_WORD_LIKE);
		existNom.setParameterClause(AdmUtilisateur._nomUser, nom);
		requete.addClause(existNom);

		requete.addClauseDate(VAdmLogData._datLog,
				EnumTypOp.AllParameter.GREATER_EQUAL, dateDebut);

		requete.addClauseDate(VAdmLogData._datLog,
				EnumTypOp.AllParameter.SMALLER_EQUAL, dateFin);

		requete.addClauseString(VAdmLogData._remoteAddr,
				EnumTypOp.StringParameter.EQUAL, adr);

		requete.addClauseString(VAdmLogData._typOp,
				EnumTypOp.StringParameter.EQUAL, typeOp);

		requete.addClauseString(VAdmLogData._tableName,
				EnumTypOp.StringParameter.CENTER_WORD_LIKE, table);

		requete.addOrdre(VAdmLogData._datLog, EnumTypOrdre.DESC);
		requete.addOrdre(VAdmLogData._timeLog, EnumTypOrdre.DESC);

		return getList(requete);
	}

	
	public List<TableGen> getListLogDataBySessionId(String sessionId)
			throws Exception {
		Request requete = new Request(VAdmLogData.class, VAdmLogData._idLog);

		requete.addField(VAdmLogData._login);
		requete.addField(VAdmLogData._nom);
		requete.addField(VAdmLogData._datLog);
		requete.addField(VAdmLogData._timeLog);
		requete.addField(VAdmLogData._remoteAddr);
		requete.addField(VAdmLogData._typOpFr);
		requete.addField(VAdmLogData._typOpAr);
		requete.addField(VAdmLogData._tableName);

		requete.setMaxRow(500);

		requete.addClauseString(VAdmLogData._sessionId,
				EnumTypOp.StringParameter.CENTER_WORD_LIKE, sessionId);

		requete.addOrdre(VAdmLogData._datLog, EnumTypOrdre.DESC);
		requete.addOrdre(VAdmLogData._timeLog, EnumTypOrdre.DESC);

		return getList(requete);
	}


}
