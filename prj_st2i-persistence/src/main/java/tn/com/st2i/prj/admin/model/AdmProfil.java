package tn.com.st2i.prj.admin.model;

/**
 * Generated by easyfaces Hibernate Tools 4.3.1
 * 
 * Postgres dataBase
 *
 */
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import java.util.HashMap;
import java.util.Map;

import lombok.Data;

@Data
@Entity
@Table(name = "adm_profil")
public class AdmProfil implements java.io.Serializable, Cloneable {
	private transient static final long serialVersionUID = 1L;

	public transient static final String _nameTable = "ADM_PROFIL";

	public transient static final String _idProfil = "ID_PROFIL";
	public transient static final String _idApp = "ID_APP";
	public transient static final String _codProfil = "COD_PROFIL";
	public transient static final String _desProfil = "DES_PROFIL";
	public transient static final String _desProfilAr = "DES_PROFIL_AR";
	public transient static final String _FActif = "F_ACTIF";
	public transient static final String _datCreat = "DAT_CREAT";
	public transient static final String _datDerModif = "DAT_DER_MODIF";

	@SuppressWarnings("serial")
	public static transient final Map<String, String> listType = new HashMap<String, String>() {
		{
			put(_idProfil, "LONG");
		}
		{
			put(_idApp, "LONG");
		}
		{
			put(_codProfil, "STRING");
		}
		{
			put(_desProfil, "STRING");
		}
		{
			put(_desProfilAr, "STRING");
		}
		{
			put(_FActif, "INTEGER");
		}
		{
			put(_datCreat, "DATE");
		}
		{
			put(_datDerModif, "DATE");
		}
	};

	@SequenceGenerator(allocationSize = 1, initialValue = 1, sequenceName = "adm_seq_gen", name = "adm_seq_gen")
	@GeneratedValue(generator = "adm_seq_gen", strategy = GenerationType.SEQUENCE)
	@Id
	@Column(name = "id_profil", unique = true, nullable = false)
	private Long idProfil;

	@Column(name = "id_app", nullable = false)
	private Long idApp;

	@Column(name = "cod_profil", nullable = false, length = 40)
	private String codProfil;

	@Column(name = "des_profil", nullable = false, length = 300)
	private String desProfil;

	@Column(name = "des_profil_ar", nullable = false, length = 300)
	private String desProfilAr;

	@Column(name = "f_actif", nullable = false, precision = 1, scale = 0)
	private Integer FActif;

	@Column(name = "dat_creat", length = 13)
	private Date datCreat;

	@Column(name = "dat_der_modif", length = 13)
	private Date datDerModif;

	public AdmProfil clone() throws CloneNotSupportedException {
		return (AdmProfil) super.clone();
	}
}
