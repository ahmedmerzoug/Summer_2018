package tn.com.st2i.prj.admin.model;

/**
 * Generated by easyfaces Hibernate Tools 4.3.1
 * 
 * Postgres dataBase
 *
 */
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import java.util.HashMap;
import java.util.Map;

import lombok.Data;

@Data
@Entity
@Table(name = "adm_utilisateur")
public class AdmUtilisateur implements java.io.Serializable, Cloneable {
	private transient static final long serialVersionUID = 1L;

	public transient static final String _nameTable = "ADM_UTILISATEUR";

	public transient static final String _idUser = "ID_USER";
	public transient static final String _idProfes = "ID_PROFES";
	public transient static final String _login = "LOGIN";
	public transient static final String _pwd = "PWD";
	public transient static final String _mail = "MAIL";
	public transient static final String _cin = "CIN";
	public transient static final String _nomUser = "NOM_USER";
	public transient static final String _nomUserAr = "NOM_USER_AR";
	public transient static final String _datNaiss = "DAT_NAISS";
	public transient static final String _Genre = "GenRE";
	public transient static final String _autreProfession = "AUTRE_PROFESSION";
	public transient static final String _directionRattache = "DIRECTION_RATTACHE";
	public transient static final String _datDerCx = "DAT_DER_CX";
	public transient static final String _FActif = "F_ACTIF";
	public transient static final String _FExpire = "F_EXPIRE";
	public transient static final String _FSusp = "F_SUSP";
	public transient static final String _datExpire = "DAT_EXPIRE";
	public transient static final String _datDerModif = "DAT_DER_MODIF";
	public transient static final String _datCreat = "DAT_CREAT";
	public transient static final String _datSuspDebut = "DAT_SUSP_DEBUT";
	public transient static final String _datSuspFin = "DAT_SUSP_FIN";

	@SuppressWarnings("serial")
	public static transient final Map<String, String> listType = new HashMap<String, String>() {
		{
			put(_idUser, "LONG");
		}
		{
			put(_idProfes, "LONG");
		}
		{
			put(_login, "STRING");
		}
		{
			put(_pwd, "STRING");
		}
		{
			put(_mail, "STRING");
		}
		{
			put(_cin, "STRING");
		}
		{
			put(_nomUser, "STRING");
		}
		{
			put(_nomUserAr, "STRING");
		}
		{
			put(_datNaiss, "DATE");
		}
		{
			put(_Genre, "INTEGER");
		}
		{
			put(_autreProfession, "STRING");
		}
		{
			put(_directionRattache, "STRING");
		}
		{
			put(_datDerCx, "DATE");
		}
		{
			put(_FActif, "INTEGER");
		}
		{
			put(_FExpire, "INTEGER");
		}
		{
			put(_FSusp, "INTEGER");
		}
		{
			put(_datExpire, "DATE");
		}
		{
			put(_datDerModif, "DATE");
		}
		{
			put(_datCreat, "DATE");
		}
		{
			put(_datSuspDebut, "DATE");
		}
		{
			put(_datSuspFin, "DATE");
		}
	};

	@SequenceGenerator(allocationSize = 1, initialValue = 1, sequenceName = "adm_seq_gen", name = "adm_seq_gen")
	@GeneratedValue(generator = "adm_seq_gen", strategy = GenerationType.SEQUENCE)
	@Id
	@Column(name = "id_user", unique = true, nullable = false)
	private Long idUser;

	@Column(name = "id_profes")
	private Long idProfes;

	@Column(name = "login", nullable = false, length = 60)
	private String login;

	@Column(name = "pwd", nullable = false, length = 100)
	private String pwd;

	@Column(name = "mail", nullable = false, length = 60)
	private String mail;

	@Column(name = "cin", length = 40)
	private String cin;

	@Column(name = "nom_user", nullable = false, length = 300)
	private String nomUser;

	@Column(name = "nom_user_ar", nullable = false, length = 300)
	private String nomUserAr;

	@Column(name = "dat_naiss", length = 13)
	private Date datNaiss;

	@Column(name = "Genre", nullable = false, precision = 1, scale = 0)
	private Integer Genre;

	@Column(name = "autre_profession", length = 300)
	private String autreProfession;

	@Column(name = "direction_rattache", length = 300)
	private String directionRattache;

	@Column(name = "dat_der_cx", length = 13)
	private Date datDerCx;

	@Column(name = "f_actif", nullable = false, precision = 1, scale = 0)
	private Integer FActif;

	@Column(name = "f_expire", nullable = false, precision = 1, scale = 0)
	private Integer FExpire;

	@Column(name = "f_susp", nullable = false, precision = 1, scale = 0)
	private Integer FSusp;

	@Column(name = "dat_expire", length = 13)
	private Date datExpire;

	@Column(name = "dat_der_modif", length = 13)
	private Date datDerModif;

	@Column(name = "dat_creat", length = 13)
	private Date datCreat;

	@Column(name = "dat_susp_debut", length = 13)
	private Date datSuspDebut;

	@Column(name = "dat_susp_fin", length = 13)
	private Date datSuspFin;

	public AdmUtilisateur clone() throws CloneNotSupportedException {
		return (AdmUtilisateur) super.clone();
	}
}
