package tn.com.st2i.prj.admin.model;

/**
 * Generated by easyfaces Hibernate Tools 4.3.1
 * 
 * Postgres dataBase
 *
 */
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import java.util.HashMap;
import java.util.Map;

import lombok.Data;

@Data
@Entity
@Table(name = "v_adm_log_acces")
public class VAdmLogAcces implements java.io.Serializable, Cloneable {
	private transient static final long serialVersionUID = 1L;

	public transient static final String _nameTable = "V_ADM_LOG_ACCES";

	public transient static final String _idLog = "ID_LOG";
	public transient static final String _datLog = "DAT_LOG";
	public transient static final String _timeLog = "TIME_LOG";
	public transient static final String _sessionId = "SESSION_ID";
	public transient static final String _remoteHost = "REMOTE_HOST";
	public transient static final String _remoteAddr = "REMOTE_ADDR";
	public transient static final String _browser = "BROWSER";
	public transient static final String _login = "LOGIN";
	public transient static final String _acces = "ACCES";
	public transient static final String _accesFr = "ACCES_FR";
	public transient static final String _accesAr = "ACCES_AR";
	public transient static final String _idUser = "ID_USER";
	public transient static final String _nom = "NOM";
	public transient static final String _idFonc = "ID_FONC";
	public transient static final String _labelFonc = "LABEL_FONC";
	public transient static final String _obs = "OBS";

	@SuppressWarnings("serial")
	public static transient final Map<String, String> listType = new HashMap<String, String>() {
		{
			put(_idLog, "LONG");
		}
		{
			put(_datLog, "DATE");
		}
		{
			put(_timeLog, "STRING");
		}
		{
			put(_sessionId, "STRING");
		}
		{
			put(_remoteHost, "STRING");
		}
		{
			put(_remoteAddr, "STRING");
		}
		{
			put(_browser, "STRING");
		}
		{
			put(_login, "STRING");
		}
		{
			put(_acces, "STRING");
		}
		{
			put(_accesFr, "STRING");
		}
		{
			put(_accesAr, "STRING");
		}
		{
			put(_idUser, "LONG");
		}
		{
			put(_nom, "STRING");
		}
		{
			put(_idFonc, "LONG");
		}
		{
			put(_labelFonc, "STRING");
		}
		{
			put(_obs, "STRING");
		}
	};

				@GeneratedValue
			@Id
	@Column(name = "id_log")
	private Long idLog;

	@Column(name = "dat_log", length = 13)
	private Date datLog;

	@Column(name = "time_log", length = 8)
	private String timeLog;

	@Column(name = "session_id", length = 100)
	private String sessionId;

	@Column(name = "remote_host", length = 40)
	private String remoteHost;

	@Column(name = "remote_addr", length = 40)
	private String remoteAddr;

	@Column(name = "browser", length = 40)
	private String browser;

	@Column(name = "login", length = 200)
	private String login;

	@Column(name = "acces", length = 20)
	private String acces;

	@Column(name = "acces_fr", length = 512)
	private String accesFr;

	@Column(name = "acces_ar", length = 512)
	private String accesAr;

	@Column(name = "id_user")
	private Long idUser;

	@Column(name = "nom", length = 200)
	private String nom;

	@Column(name = "id_fonc")
	private Long idFonc;

	@Column(name = "label_fonc", length = 200)
	private String labelFonc;

	@Column(name = "obs", length = 3000)
	private String obs;

	public VAdmLogAcces clone() throws CloneNotSupportedException {
		return (VAdmLogAcces) super.clone();
	}
}
