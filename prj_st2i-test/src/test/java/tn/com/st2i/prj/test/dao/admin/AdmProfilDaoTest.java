package tn.com.st2i.prj.test.dao.admin;

/**
 * Generated by easyfaces Hibernate Tools 4.3.1
 */

import java.lang.reflect.Method;

import com.easyfaces.test.dao.DaoManagerTest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.context.ContextConfiguration;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import tn.com.st2i.prj.admin.dao.IAdmProfilDao;
import tn.com.st2i.prj.admin.model.AdmProfil;

@ContextConfiguration(locations = {"classpath:/spring/applicationContext-dao-test.xml"})
public class AdmProfilDaoTest extends DaoManagerTest<AdmProfil> {

	@Autowired()
	@Qualifier("admProfilDao")
	private IAdmProfilDao admProfilDao;

	@Test(groups = "database-test-table")
	public void testGetAll() {
		this.testGetAllGen(admProfilDao, AdmProfil.class);
	}

	@Test(groups = "database-test-unique")
	public void testUniqueId() {
		testUniqueIdGen(AdmProfil.class);
	}
	
	@BeforeMethod(alwaysRun = true)
	public void runScript(Method method) {
		if ("isCodeUniqueTest".equals(method.getName())) {
			executeScript("admin/profil.sql");
		}
	}
	
	@AfterTest(alwaysRun = true)
	public void cleanBase() {
		executeScript("admin/profilClean.sql");
	}

	@Test(groups = "database-test-query")
	public void isCodeUniqueTest() {

		boolean isUnique = admProfilDao.isCodeProfilUnique("testNG", null);
		Assert.assertEquals(isUnique, false);

		isUnique = admProfilDao.isCodeProfilUnique("testNG1", null);
		Assert.assertEquals(isUnique, true);

		AdmProfil p = admProfilDao.findByID(AdmProfil.class, -1L);

		isUnique = admProfilDao.isCodeProfilUnique("testNG", p.getIdProfil());
		Assert.assertEquals(isUnique, true);
	}

}
